#!/bin/bash
# Test de connectivit√© avec le serveur

echo "üåê TEST DE CONNECTIVIT√â SERVEUR"
echo "==============================="

SERVER_IP="192.168.1.252"
SERVER_USER="root"

# Couleurs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() { echo -e "${GREEN}‚úÖ $1${NC}"; }
print_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
print_error() { echo -e "${RED}‚ùå $1${NC}"; }
print_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }

# Test 1: Ping
print_info "Test 1: Connectivit√© r√©seau..."
if ping -c 3 "$SERVER_IP" > /dev/null 2>&1; then
    print_status "Serveur $SERVER_IP accessible"
else
    print_error "Serveur $SERVER_IP non accessible"
    print_info "V√©rifiez :"
    echo "- L'adresse IP du serveur"
    echo "- La connectivit√© r√©seau"
    echo "- Le firewall"
    exit 1
fi

# Test 2: SSH
print_info "Test 2: Connexion SSH..."
if timeout 10 ssh -o ConnectTimeout=5 -o BatchMode=yes "$SERVER_USER@$SERVER_IP" exit 2>/dev/null; then
    print_status "Connexion SSH r√©ussie"
else
    print_warning "Connexion SSH √©chou√©e"
    print_info "Solutions possibles :"
    echo "1. Configurer les cl√©s SSH :"
    echo "   ssh-keygen -t rsa"
    echo "   ssh-copy-id $SERVER_USER@$SERVER_IP"
    echo ""
    echo "2. Ou utiliser le mot de passe :"
    echo "   ssh $SERVER_USER@$SERVER_IP"
    echo ""
    echo "3. V√©rifier le service SSH :"
    echo "   sudo systemctl status ssh"
fi

# Test 3: HTTP
print_info "Test 3: Service web..."
if curl -s -o /dev/null -w "%{http_code}" "http://$SERVER_IP" | grep -q "200\|301\|302"; then
    print_status "Service web accessible"
else
    print_warning "Service web non accessible"
    print_info "V√©rifiez Apache/Nginx sur le serveur"
fi

# Test 4: Dolibarr
print_info "Test 4: Dolibarr..."
if curl -s "http://$SERVER_IP/dolibarr/" | grep -q -i "dolibarr\|login"; then
    print_status "Dolibarr accessible"
else
    print_warning "Dolibarr non accessible"
    print_info "URL √† v√©rifier : http://$SERVER_IP/dolibarr/"
fi

# Test 5: Module existant
print_info "Test 5: Module AuditDigital existant..."
if timeout 10 ssh -o ConnectTimeout=5 -o BatchMode=yes "$SERVER_USER@$SERVER_IP" "test -d /usr/share/dolibarr/htdocs/custom/auditdigital" 2>/dev/null; then
    print_warning "Module AuditDigital d√©j√† pr√©sent"
    print_info "Il sera sauvegard√© avant le d√©ploiement"
else
    print_status "Emplacement libre pour le nouveau module"
fi

print_info "\n=== R√âSUM√â ==="

# G√©n√©rer les commandes de d√©ploiement
cat << EOF

üöÄ COMMANDES DE D√âPLOIEMENT :

1. D√©ploiement automatique :
   ./deploy_to_server.sh

2. D√©ploiement manuel :
   # Copier le module
   scp -r htdocs/custom/auditdigital $SERVER_USER@$SERVER_IP:/usr/share/dolibarr/htdocs/custom/
   
   # Copier le script de correction
   scp fix_wizard_final.sh $SERVER_USER@$SERVER_IP:/tmp/
   
   # Se connecter et appliquer
   ssh $SERVER_USER@$SERVER_IP
   chmod +x /tmp/fix_wizard_final.sh
   sudo /tmp/fix_wizard_final.sh

3. Test du wizard :
   http://$SERVER_IP/dolibarr/custom/auditdigital/wizard/index.php

EOF

print_info "üìã Consultez GUIDE_TEST_WIZARD.md pour les d√©tails des tests"

exit 0