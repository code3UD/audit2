#!/bin/bash

# Script de test des corrections de scores et PDF
# V√©rifie que les calculs sont corrects et que le PDF se g√©n√®re

echo "üß™ TEST DES CORRECTIONS DE SCORES ET PDF"
echo "========================================"

MODULE_DIR="/workspace/audit2"

# Test 1: V√©rification des calculs de scores corrig√©s
echo
echo "1Ô∏è‚É£ Test des calculs de scores :"

# V√©rifier que les calculs utilisent la division par 3 (moyenne)
if grep -q "/ 3.*Moyenne sur 10" "$MODULE_DIR/wizard/enhanced.php"; then
    echo "  ‚úÖ Calculs corrig√©s : division par 3 pour moyenne"
else
    echo "  ‚ùå Calculs non corrig√©s"
fi

# V√©rifier la pond√©ration finale
if grep -q "0.30.*0.25.*0.25.*0.20.*10" "$MODULE_DIR/wizard/enhanced.php"; then
    echo "  ‚úÖ Pond√©ration corrig√©e : 30% + 25% + 25% + 20% = 100%"
else
    echo "  ‚ùå Pond√©ration incorrecte"
fi

# Test 2: V√©rification de la g√©n√©ration PDF
echo
echo "2Ô∏è‚É£ Test de la g√©n√©ration PDF :"

if grep -q "pdf_audit_enhanced" "$MODULE_DIR/wizard/enhanced.php"; then
    echo "  ‚úÖ G√©n√©rateur PDF int√©gr√©"
else
    echo "  ‚ùå G√©n√©rateur PDF manquant"
fi

if grep -q "write_file.*audit.*langs" "$MODULE_DIR/wizard/enhanced.php"; then
    echo "  ‚úÖ Fonction de g√©n√©ration PDF appel√©e"
else
    echo "  ‚ùå Fonction de g√©n√©ration PDF non appel√©e"
fi

# Test 3: V√©rification des messages d'erreur
echo
echo "3Ô∏è‚É£ Test de la gestion d'erreurs :"

if grep -q "try.*catch.*Exception" "$MODULE_DIR/wizard/enhanced.php"; then
    echo "  ‚úÖ Gestion d'erreurs PDF impl√©ment√©e"
else
    echo "  ‚ùå Gestion d'erreurs PDF manquante"
fi

# Test 4: Simulation de calcul de score
echo
echo "4Ô∏è‚É£ Test de simulation de calcul :"

# Simuler des valeurs d'entr√©e
digital_level=8
web_presence=7
digital_tools=6

security_level=5
rgpd_compliance=4
backup_strategy=6

cloud_adoption=7
mobility=8
infrastructure=5

automation_level=6
collaboration_tools=7
data_analysis=5

# Calculs selon la nouvelle formule
maturity_score=$(echo "scale=2; ($digital_level + $web_presence + $digital_tools) / 3" | bc)
security_score=$(echo "scale=2; ($security_level + $rgpd_compliance + $backup_strategy) / 3" | bc)
cloud_score=$(echo "scale=2; ($cloud_adoption + $mobility + $infrastructure) / 3" | bc)
automation_score=$(echo "scale=2; ($automation_level + $collaboration_tools + $data_analysis) / 3" | bc)

total_score=$(echo "scale=2; ($maturity_score * 0.30 + $security_score * 0.25 + $cloud_score * 0.25 + $automation_score * 0.20) * 10" | bc)

echo "  üìä Simulation avec valeurs test :"
echo "     ‚Ä¢ Maturit√© Digitale : $maturity_score/10 ($(echo "scale=0; $maturity_score * 10" | bc)%)"
echo "     ‚Ä¢ Cybers√©curit√© : $security_score/10 ($(echo "scale=0; $security_score * 10" | bc)%)"
echo "     ‚Ä¢ Cloud & Infrastructure : $cloud_score/10 ($(echo "scale=0; $cloud_score * 10" | bc)%)"
echo "     ‚Ä¢ Automatisation : $automation_score/10 ($(echo "scale=0; $automation_score * 10" | bc)%)"
echo "     ‚Ä¢ Score Global : $total_score/100"

# V√©rifier que le score est dans la plage normale
if (( $(echo "$total_score <= 100" | bc -l) )); then
    echo "  ‚úÖ Score global dans la plage normale (‚â§ 100)"
else
    echo "  ‚ùå Score global aberrant (> 100)"
fi

# Test 5: V√©rification de la syntaxe PHP
echo
echo "5Ô∏è‚É£ Test syntaxe PHP :"

php -l "$MODULE_DIR/wizard/enhanced.php" > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "  ‚úÖ Syntaxe PHP valide"
else
    echo "  ‚ùå Erreur de syntaxe PHP"
fi

# Test 6: V√©rification du g√©n√©rateur PDF
echo
echo "6Ô∏è‚É£ Test du g√©n√©rateur PDF :"

if [ -f "$MODULE_DIR/core/modules/auditdigital/doc/pdf_audit_enhanced.modules.php" ]; then
    echo "  ‚úÖ Fichier g√©n√©rateur PDF pr√©sent"
    
    php -l "$MODULE_DIR/core/modules/auditdigital/doc/pdf_audit_enhanced.modules.php" > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "  ‚úÖ Syntaxe g√©n√©rateur PDF valide"
    else
        echo "  ‚ùå Erreur syntaxe g√©n√©rateur PDF"
    fi
else
    echo "  ‚ùå Fichier g√©n√©rateur PDF manquant"
fi

# R√©sum√©
echo
echo "üìä R√âSUM√â DES CORRECTIONS :"
echo "=========================="

corrections=0
total_tests=6

# Compter les corrections r√©ussies
if grep -q "/ 3.*Moyenne sur 10" "$MODULE_DIR/wizard/enhanced.php"; then
    corrections=$((corrections + 1))
fi

if grep -q "0.30.*0.25.*0.25.*0.20.*10" "$MODULE_DIR/wizard/enhanced.php"; then
    corrections=$((corrections + 1))
fi

if grep -q "pdf_audit_enhanced" "$MODULE_DIR/wizard/enhanced.php"; then
    corrections=$((corrections + 1))
fi

if grep -q "try.*catch.*Exception" "$MODULE_DIR/wizard/enhanced.php"; then
    corrections=$((corrections + 1))
fi

php -l "$MODULE_DIR/wizard/enhanced.php" > /dev/null 2>&1
if [ $? -eq 0 ]; then
    corrections=$((corrections + 1))
fi

if [ -f "$MODULE_DIR/core/modules/auditdigital/doc/pdf_audit_enhanced.modules.php" ]; then
    corrections=$((corrections + 1))
fi

echo "Corrections r√©ussies : $corrections/$total_tests"

if [ $corrections -eq $total_tests ]; then
    echo
    echo "üéâ TOUTES LES CORRECTIONS APPLIQU√âES AVEC SUCC√àS !"
    echo "================================================="
    echo "‚úÖ Calculs de scores corrig√©s"
    echo "‚úÖ G√©n√©ration PDF int√©gr√©e"
    echo "‚úÖ Gestion d'erreurs robuste"
    echo "‚úÖ Syntaxe PHP valide"
    echo "‚úÖ Tous les fichiers pr√©sents"
    echo
    echo "üöÄ Le wizard est pr√™t pour production !"
else
    echo
    echo "‚ö†Ô∏è  CORRECTIONS PARTIELLES"
    echo "========================="
    echo "Certaines corrections n√©cessitent encore des ajustements."
fi

echo
echo "üåê Test en ligne :"
echo "https://work-1-hahvgpojwleeosnl.prod-runtime.all-hands.dev/demo_enhanced.php?step=6"